[{"C:\\Users\\ASUS\\Desktop\\Transfer\\Practice\\reactjs\\react-zomato-app\\src\\index.js":"1","C:\\Users\\ASUS\\Desktop\\Transfer\\Practice\\reactjs\\react-zomato-app\\src\\App.jsx":"2","C:\\Users\\ASUS\\Desktop\\Transfer\\Practice\\reactjs\\react-zomato-app\\src\\components\\Search.jsx":"3","C:\\Users\\ASUS\\Desktop\\Transfer\\Practice\\reactjs\\react-zomato-app\\src\\components\\Home.jsx":"4","C:\\Users\\ASUS\\Desktop\\Transfer\\Practice\\reactjs\\react-zomato-app\\src\\components\\PageNot.jsx":"5","C:\\Users\\ASUS\\Desktop\\Transfer\\Practice\\reactjs\\react-zomato-app\\src\\components\\Restaurant.jsx":"6","C:\\Users\\ASUS\\Desktop\\Transfer\\Practice\\reactjs\\react-zomato-app\\src\\components\\Header.jsx":"7","C:\\Users\\ASUS\\Desktop\\Final\\react-zomato-app\\src\\index.js":"8","C:\\Users\\ASUS\\Desktop\\Final\\react-zomato-app\\src\\App.jsx":"9","C:\\Users\\ASUS\\Desktop\\Final\\react-zomato-app\\src\\components\\PageNot.jsx":"10","C:\\Users\\ASUS\\Desktop\\Final\\react-zomato-app\\src\\components\\Home.jsx":"11","C:\\Users\\ASUS\\Desktop\\Final\\react-zomato-app\\src\\components\\Restaurant.jsx":"12","C:\\Users\\ASUS\\Desktop\\Final\\react-zomato-app\\src\\components\\Search.jsx":"13","C:\\Users\\ASUS\\Desktop\\Final\\react-zomato-app\\src\\components\\Header.jsx":"14"},{"size":560,"mtime":1690649548000,"results":"15","hashOfConfig":"16"},{"size":612,"mtime":1692600642615,"results":"17","hashOfConfig":"16"},{"size":12315,"mtime":1692786900937,"results":"18","hashOfConfig":"16"},{"size":7021,"mtime":1692778667794,"results":"19","hashOfConfig":"16"},{"size":327,"mtime":1690612682000,"results":"20","hashOfConfig":"16"},{"size":12395,"mtime":1692786960809,"results":"21","hashOfConfig":"16"},{"size":9582,"mtime":1692603377347,"results":"22","hashOfConfig":"16"},{"size":560,"mtime":1690649548000,"results":"23","hashOfConfig":"24"},{"size":612,"mtime":1693206584321,"results":"25","hashOfConfig":"24"},{"size":327,"mtime":1690612682000,"results":"26","hashOfConfig":"24"},{"size":7021,"mtime":1692859507508,"results":"27","hashOfConfig":"24"},{"size":12402,"mtime":1693233994118,"results":"28","hashOfConfig":"24"},{"size":12315,"mtime":1692786900937,"results":"29","hashOfConfig":"24"},{"size":9585,"mtime":1693726959021,"results":"30","hashOfConfig":"24"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"682yww",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"f9p9xi",{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ASUS\\Desktop\\Transfer\\Practice\\reactjs\\react-zomato-app\\src\\index.js",[],[],[],"C:\\Users\\ASUS\\Desktop\\Transfer\\Practice\\reactjs\\react-zomato-app\\src\\App.jsx",[],[],"C:\\Users\\ASUS\\Desktop\\Transfer\\Practice\\reactjs\\react-zomato-app\\src\\components\\Search.jsx",["76","77","78","79","80","81","82","83"],[],"C:\\Users\\ASUS\\Desktop\\Transfer\\Practice\\reactjs\\react-zomato-app\\src\\components\\Home.jsx",["84","85","86"],[],"import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { restaurant } from './Restaurant';\r\nimport Header from \"./Header\";\r\n\r\nfunction Home() {\r\n  let navigate = useNavigate()\r\n  let initData = {\r\n    _id: \"\",\r\n    name: \"\",\r\n    city_id: 0,\r\n    location_id: 0,\r\n    city: \"\",\r\n    country_name: \"\",\r\n  }\r\n  let [meals, setMeals] = useState([]);\r\n  let [hideLocation, setHideLocation] = useState(true);\r\n  let [locations, setLocations] = useState([]);\r\n  let [selectLocation, setSelectLocation] = useState({ ...initData });\r\n  let [restaurant_list, setRestaurantList] = useState({ list: [], message: \"0 restaurant found\" })\r\n\r\n\r\n  let setASelectedLocation = (id) => {\r\n    setSelectLocation(locations[id]);\r\n    setHideLocation(true);\r\n  };\r\n\r\n\r\n  let getMealTypeList = async () => {\r\n    try {\r\n      let url = 'http://localhost:4040/api/get-meal-type-list';\r\n      let response = await axios.get(url);\r\n      let data = response.data;\r\n      setMeals(data.result);\r\n    } catch (error) {\r\n      alert('Server Error');\r\n      console.log(error);\r\n    }\r\n\r\n  };\r\n  let getLocationList = async () => {\r\n    try {\r\n      let url = 'http://localhost:4040/api/get-location-list';\r\n      let response = await axios.get(url);\r\n      let data = response.data;\r\n      setLocations(data.result);\r\n    } catch (error) {\r\n      alert('Server Error');\r\n      console.log(error);\r\n    }\r\n\r\n  };\r\n  let getRestaurantListByLocationId = async () => {\r\n    let url = 'http://localhost:4040/api/get-restaurant-list-by-loc-id/' + selectLocation.location_id;\r\n    let { data } = await axios.get(url)\r\n    setRestaurantList({ list: data.result, message: data.result.length + ' restaurant found', });\r\n  }\r\n\r\n\r\n  // only on page load\r\n\r\n  useEffect(() => {\r\n    getMealTypeList();\r\n    getLocationList();\r\n  }, []);// on mount\r\n\r\n  useEffect(() => {\r\n    if (selectLocation.location_id !== 0) {\r\n      getRestaurantListByLocationId();\r\n    }\r\n  }, [selectLocation])\r\n\r\n\r\n  return <>\r\n    <section className=\"row main-section align-content-start\">\r\n      {/* <header className=\"col-12 py-3\">\r\n        <div className=\"container d-lg-flex justify-content-lg-end d-flex justify-content-between\">\r\n          <button className=\"btn text-white me-3\">Login</button>\r\n          <button className=\"btn text-white border border-white\">\r\n            Create an account\r\n          </button>\r\n        </div>\r\n      </header> */}\r\n      <Header page={\"home\"} />\r\n      <section className=\"col-12 d-flex flex-column align-items-center justify-content-center\">\r\n        <p className=\"brand-name fw-bold \">e!</p>\r\n        <p className=\"h1 text-white my-3 text-center\">\r\n          Find the best restaurants, caf√©s, and bars\r\n        </p>\r\n        <div className=\"search gap-lg-3  d-lg-flex align-items-start mt-3 search-div\">\r\n          <div className=\"w-50 me-lg-0 position-relative\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control  set-100 mb-lg-1 w-100 me-lg-0 py-lg-2 py-2 px-3\"\r\n              placeholder=\"Please type a location\"\r\n              readOnly\r\n              value={selectLocation.name === \"\" ? \"\" : `${selectLocation.name},${selectLocation.city}`}\r\n              onClick={() => setHideLocation(false)}\r\n            />\r\n            {\r\n              hideLocation ? null : (\r\n                <ul className=\"list-group me-lg-0 position-absolute top-100 w-100 \" >\r\n                  {\r\n                    locations.map((location, index) => {\r\n                      return (\r\n                        <li key={location._id} className=\"list-group-item z-100\" onClick={() => setASelectedLocation(index)}>{location.name},{location.city}</li>\r\n                      )\r\n                    })\r\n                  }\r\n                </ul>\r\n              )}\r\n          </div>\r\n\r\n          <div className=\"w-75 position-relative\">\r\n            <div className=\"w-100 input-group\">\r\n              <span className=\"input-group-text bg-white react-search\">\r\n                <svg stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" viewBox=\"0 0 1024 1024\" height=\"20px\" width=\"20px\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M909.6 854.5L649.9 594.8C690.2 542.7 712 479 712 412c0-80.2-31.3-155.4-87.9-212.1-56.6-56.7-132-87.9-212.1-87.9s-155.5 31.3-212.1 87.9C143.2 256.5 112 331.8 112 412c0 80.1 31.3 155.5 87.9 212.1C256.5 680.8 331.8 712 412 712c67 0 130.6-21.8 182.7-62l259.7 259.6a8.2 8.2 0 0 0 11.6 0l43.6-43.5a8.2 8.2 0 0 0 0-11.6zM570.4 570.4C528 612.7 471.8 636 412 636s-116-23.3-158.4-65.6C211.3 528 188 471.8 188 412s23.3-116.1 65.6-158.4C296 211.3 352.2 188 412 188s116.1 23.2 158.4 65.6S636 352.2 636 412s-23.3 116.1-65.6 158.4z\" ></path></svg>\r\n              </span>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control py-lg-2 py-2 px-3 mb-lg-1\"\r\n                placeholder={restaurant_list.message}\r\n                onChange={() => { }}\r\n                readOnly\r\n              />\r\n            </div>\r\n\r\n\r\n            <ul className=\"list-group  position-absolute top-100 w-100 \" >\r\n              {\r\n                restaurant_list.list.map((restaurant, index) => {\r\n                  return (\r\n                    <li key={restaurant._id} className=\"list-group-item \" onClick={() => navigate('/Restaurant-details/' + restaurant._id)}> <img style={{ width: '50px', height: '50px', 'borderRadius': '50px' }} src={'images/' + restaurant.image} className=\"me-2\" /> <span>{restaurant.name},{restaurant.city}</span></li>\r\n                  )\r\n                })\r\n              }\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </section>\r\n    <section className=\"row justify-content-center\">\r\n      <section className=\"col-10 mt-3\">\r\n        <h3 className=\"fw-bold text-navy\">Quick Searches</h3>\r\n        <p className=\"text-secondary\">Discover restaurants by Searches</p>\r\n      </section>\r\n      <section className=\"col-10\">\r\n        <section className=\"row py-2\">\r\n          <section className=\"col-12 px-0 d-flex justify-content-between flex-wrap\">\r\n            {meals.map((meal) => {\r\n              return (\r\n                <>\r\n                  <section key={meal._id} className=\"px-0 d-flex border border-1 quick-search-item\"\r\n                    onClick={() => navigate(`/search/${meal.meal_type}/${meal.name}`)}>\r\n                    <img\r\n                      src={\"/images/\" + meal.image}\r\n                      alt=\"\"\r\n                      className=\"image-item\"\r\n                    />\r\n                    <div className=\"pt-3 px-2\">\r\n                      <h4 className=\"text-navy\">{meal.name}</h4>\r\n                      <p className=\"small text-muted\">\r\n                        {meal.content}\r\n                      </p>\r\n                    </div>\r\n                  </section >\r\n                </>\r\n              )\r\n            })}\r\n          </section>\r\n        </section>\r\n      </section>\r\n    </section >\r\n  </>\r\n}\r\n\r\nexport default Home;","C:\\Users\\ASUS\\Desktop\\Transfer\\Practice\\reactjs\\react-zomato-app\\src\\components\\PageNot.jsx",[],[],"C:\\Users\\ASUS\\Desktop\\Transfer\\Practice\\reactjs\\react-zomato-app\\src\\components\\Restaurant.jsx",["87","88"],[],"C:\\Users\\ASUS\\Desktop\\Transfer\\Practice\\reactjs\\react-zomato-app\\src\\components\\Header.jsx",["89","90","91"],[],"import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nfunction Header(props) {\r\n  let navigate = useNavigate();\r\n  let { page } = props;\r\n  let headerClass = \"d-flex justify-content-between py-2\";\r\n  let initialUserValue = {\r\n    fullName: 'prajathma',\r\n    email: 'prajathma@gmail.com',\r\n    mobile: '1234512345',\r\n    password: 'admin@123',\r\n    confirmPassword: 'admin@123',\r\n    address: 'Bengaluru',\r\n  }\r\n\r\n  let [newUser, setNewUser] = useState({ ...initialUserValue });\r\n  let [showPassword, setShowPassword] = useState(false);\r\n  //collect data from local storage\r\n  let data = localStorage.getItem('user');\r\n  //convert string data to JSON DATA ==> JSON.parse()\r\n  data = null ? null : JSON.parse(data);\r\n  let [loginDetails] = useState(data);\r\n  let regModal = useRef();\r\n\r\n\r\n  let setInputData = (event) => {\r\n\r\n    let { value, name } = event.target;\r\n    setNewUser({ ...newUser, [name]: value })\r\n  }\r\n\r\n\r\n  let saveUser = async () => {\r\n    let sendData = {\r\n      f_name: newUser.fullName,\r\n      address: newUser.address,\r\n      email: newUser.email,\r\n      mobile: newUser.mobile,\r\n      password: newUser.password,\r\n    }\r\n    console.log(sendData);\r\n    let url = \"http://localhost:4040/api/save-user-data\";\r\n    let { data } = await axios.post(url, sendData)\r\n    console.log(regModal.current);\r\n\r\n    if (data.call == true) {\r\n      alert(\"Registered Successfully\");\r\n      // let modal = new window.bootstrap.modal(regModal.current)\r\n      // modal.hide();\r\n      window.location.reload();\r\n    } else {\r\n      alert(data.message);\r\n    }\r\n\r\n  }\r\n\r\n  let userLogin = async () => {\r\n    let sendData = {\r\n      username: newUser.mobile,\r\n      password: newUser.password,\r\n    }\r\n    let url = \"http://localhost:4040/api/login\";\r\n    let { data } = await axios.post(url, sendData)\r\n    console.log(data);\r\n    if (data.call === true) {\r\n      alert(\"user login successful\")\r\n      // browse local storage to save the data\r\n      // convert a json to string  ==> JSON.stringify\r\n      localStorage.setItem(\"user\", JSON.stringify(data.user));\r\n      window.location.assign(\"/\");\r\n\r\n    } else {\r\n      alert(\"Username or password is wrong\")\r\n    }\r\n  };\r\n\r\n  let logout = () => {\r\n    localStorage.removeItem('user');\r\n    alert('Logout Successfully')\r\n    window.location.assign('/');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"modal fade\" id=\"modalLogin\" aria-hidden=\"true\" aria-labelledby=\"modalLogin\" tabindex=\"-1\">\r\n        <div className=\"modal-dialog modal-dialog-centered\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h1 className=\"modal-title fs-5\">Login</h1>\r\n              <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <form>\r\n                {/*  */}\r\n                <div className=\"input-group mb-3\">\r\n                  <span className=\"input-group-text bg-success text-white\"><i className=\"fa fa-phone\"></i></span>\r\n                  <input type=\"number\" className=\"form-control\" placeholder=\"Mobile Number\" onChange={setInputData} value={newUser.mobile} name=\"mobile\" />\r\n                </div>\r\n                {/*  */}\r\n                <div className=\"input-group mb-3\">\r\n                  <span className=\"input-group-text bg-success text-white\"><i className=\"fa fa-key\"></i></span>\r\n                  <input type={showPassword ? \"TEXT\" : \"password\"} className=\"form-control\" placeholder=\"Password\" onChange={setInputData} value={newUser.password} name=\"password\" />\r\n                  <button type=\"button\" className=\"input-group-text bg-transparent text-black border-0\" onClick={() => setShowPassword(!showPassword)}><i className={showPassword ? \"fa fa-eye\" : \"fa fa-eye-slash\"}></i></button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <hr className=\"p-0 m-0\" />\r\n            <div className=\"d-flex justify-content-between\">\r\n              <p className=\"mt-2 ps-2\">\r\n                Don't have an account ?\r\n                <a className=\"btn btn-link text-primary mb-1\" data-bs-target=\"#modalCreateAccount\" data-bs-toggle=\"modal\">Create Acc.</a>\r\n              </p>\r\n              <button className=\"btn btn-success btn-height mt-2 me-2\" onClick={userLogin}>Login</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"modal fade\" id=\"modalCreateAccount\" aria-hidden=\"true\" aria-labelledby=\"modalCreateAccountLabel\" tabindex=\"-1\" ref={regModal}>\r\n        <div className=\"modal-dialog modal-dialog-centered\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h1 className=\"modal-title fs-5\" id=\"modalCreateAccountLabel\">Registration</h1>\r\n              <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <form>\r\n                <div className=\"input-group mb-3\">\r\n                  <span className=\"input-group-text bg-primary text-white\"><i className=\"fa fa-user-circle-o\"></i></span>\r\n                  <input type=\"text\" className=\"form-control\" placeholder=\"Enter Full Name\" onChange={setInputData} value={newUser.fullName} name=\"fullName\" />\r\n                </div>\r\n                {/*  */}\r\n                <div className=\"input-group mb-3\">\r\n                  <span className=\"input-group-text bg-danger text-white\"><i className=\"fa fa-envelope\"></i></span>\r\n                  <input type=\"email\" className=\"form-control\" placeholder=\"Email Id\" onChange={setInputData} value={newUser.email} name=\"email\" />\r\n                </div>\r\n                {/*  */}\r\n                <div className=\"input-group mb-3\">\r\n                  <span className=\"input-group-text bg-success text-white\"><i className=\"fa fa-phone\"></i></span>\r\n                  <input type=\"number\" className=\"form-control\" placeholder=\"Mobile Number\" onChange={setInputData} value={newUser.mobile} name=\"mobile\" />\r\n                </div>\r\n                {/*  */}\r\n                <div className=\"input-group mb-3\">\r\n                  <span className=\"input-group-text bg-success text-white\"><i className=\"fa fa-key\"></i></span>\r\n                  <input type={showPassword ? \"TEXT\" : \"password\"} className=\"form-control\" placeholder=\"Password\" onChange={setInputData} value={newUser.password} name=\"password\" />\r\n                  <button type=\"button\" className=\"input-group-text bg-transparent text-black border-0\" onClick={() => setShowPassword(!showPassword)}><i className={showPassword ? \"fa fa-eye\" : \"fa fa-eye-slash\"}></i></button>\r\n                </div>\r\n                {/*  */}\r\n                <div className=\"input-group mb-3\">\r\n                  <span className=\"input-group-text bg-success text-white\"><i className=\"fa fa-key\"></i></span>\r\n                  <input type={showPassword ? \"TEXT\" : \"password\"} className=\"form-control\" placeholder=\"Confirm Password\" onChange={setInputData} value={newUser.confirmPassword} name=\"confirmPassword\" />\r\n                  <button type=\"button\" className=\"input-group-text bg-transparent text-black border-0\" onClick={() => setShowPassword(!showPassword)}><i className={showPassword ? \"fa fa-eye\" : \"fa fa-eye-slash\"}></i></button>\r\n                </div>\r\n                {/*  */}\r\n                <div className=\"input-group mb-3\">\r\n                  <span className=\"input-group-text bg-warning text-white\"><i className=\"fa fa-address-book-o\"></i></span>\r\n                  <textarea className=\"form-control\" placeholder=\"Address\" onChange={setInputData} value={newUser.address} name=\"address\"></textarea>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <hr className=\"p-0 m-0\" />\r\n            <div className=\"d-flex justify-content-between\">\r\n              <p className=\"mt-2 ps-2\">\r\n                Have an account ?\r\n                <a className=\"btn btn-link text-primary mb-1\" data-bs-target=\"#modalLogin\" data-bs-toggle=\"modal\">Login</a>\r\n              </p>\r\n              <button className=\"btn btn-success btn-height mt-2 me-2\" onClick={saveUser}>Sign Up</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div className={page === \"home\" ? \"row justify-content-center\" : \"row bg-danger justify-content-center\"}>\r\n        <div className={page === \"home\" ? \"col-12 d-flex justify-content-end py-2\" : \"col-10 \" + headerClass}>\r\n\r\n          {\r\n            page === \"home\" ? null : (\r\n              <p className=\"m-0 brand \" style={{ cursor: \"pointer\" }} onClick={() => navigate(\"/\")}>e!</p>\r\n            )\r\n          }\r\n          <div>\r\n            {\r\n              loginDetails ? (<><span className=\"text-white fw-bold h3\">Welcome  {loginDetails.first_name}</span>\r\n                <button className=\"btn btn-sm btn-warning text-white ms-2\" onClick={logout}>Log Out</button></>) : (<>\r\n                  <button className=\"btn text-white\" data-bs-target=\"#modalLogin\" data-bs-toggle=\"modal\">Login</button>\r\n                  <button className=\"btn btn-outline-light\" data-bs-target=\"#modalCreateAccount\" data-bs-toggle=\"modal\">\r\n                    <i className=\"fa fa-search\" aria-hidden=\"true\"></i>Create a\r\n                    Account\r\n                  </button>\r\n                </>)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\ASUS\\Desktop\\Final\\react-zomato-app\\src\\index.js",[],[],"C:\\Users\\ASUS\\Desktop\\Final\\react-zomato-app\\src\\App.jsx",[],[],"C:\\Users\\ASUS\\Desktop\\Final\\react-zomato-app\\src\\components\\PageNot.jsx",[],[],"C:\\Users\\ASUS\\Desktop\\Final\\react-zomato-app\\src\\components\\Home.jsx",["92","93","94"],[],"C:\\Users\\ASUS\\Desktop\\Final\\react-zomato-app\\src\\components\\Restaurant.jsx",["95","96"],[],"C:\\Users\\ASUS\\Desktop\\Final\\react-zomato-app\\src\\components\\Search.jsx",["97","98","99","100","101","102","103","104"],[],"C:\\Users\\ASUS\\Desktop\\Final\\react-zomato-app\\src\\components\\Header.jsx",["105","106","107"],[],{"ruleId":"108","severity":1,"message":"109","line":4,"column":8,"nodeType":"110","messageId":"111","endLine":4,"endColumn":18},{"ruleId":"108","severity":1,"message":"112","line":21,"column":8,"nodeType":"110","messageId":"111","endLine":21,"endColumn":20},{"ruleId":"108","severity":1,"message":"113","line":22,"column":8,"nodeType":"110","messageId":"111","endLine":22,"endColumn":18},{"ruleId":"108","severity":1,"message":"114","line":22,"column":20,"nodeType":"110","messageId":"111","endLine":22,"endColumn":33},{"ruleId":"108","severity":1,"message":"115","line":24,"column":8,"nodeType":"110","messageId":"111","endLine":24,"endColumn":18},{"ruleId":"108","severity":1,"message":"116","line":24,"column":20,"nodeType":"110","messageId":"111","endLine":24,"endColumn":33},{"ruleId":"117","severity":1,"message":"118","line":102,"column":6,"nodeType":"119","endLine":102,"endColumn":14,"suggestions":"120"},{"ruleId":"121","severity":1,"message":"122","line":242,"column":23,"nodeType":"123","endLine":242,"endColumn":88},{"ruleId":"108","severity":1,"message":"124","line":4,"column":10,"nodeType":"110","messageId":"111","endLine":4,"endColumn":20},{"ruleId":"117","severity":1,"message":"125","line":72,"column":6,"nodeType":"119","endLine":72,"endColumn":22,"suggestions":"126"},{"ruleId":"121","severity":1,"message":"122","line":134,"column":142,"nodeType":"123","endLine":134,"endColumn":267},{"ruleId":"117","severity":1,"message":"127","line":87,"column":6,"nodeType":"119","endLine":87,"endColumn":8,"suggestions":"128"},{"ruleId":"121","severity":1,"message":"122","line":108,"column":27,"nodeType":"123","endLine":108,"endColumn":59},{"ruleId":"129","severity":1,"message":"130","line":50,"column":19,"nodeType":"131","messageId":"132","endLine":50,"endColumn":21},{"ruleId":"133","severity":1,"message":"134","line":115,"column":17,"nodeType":"123","endLine":115,"endColumn":123},{"ruleId":"133","severity":1,"message":"134","line":168,"column":17,"nodeType":"123","endLine":168,"endColumn":115},{"ruleId":"108","severity":1,"message":"124","line":4,"column":10,"nodeType":"110","messageId":"111","endLine":4,"endColumn":20},{"ruleId":"117","severity":1,"message":"125","line":72,"column":6,"nodeType":"119","endLine":72,"endColumn":22,"suggestions":"135"},{"ruleId":"121","severity":1,"message":"122","line":134,"column":142,"nodeType":"123","endLine":134,"endColumn":267},{"ruleId":"117","severity":1,"message":"127","line":87,"column":6,"nodeType":"119","endLine":87,"endColumn":8,"suggestions":"136"},{"ruleId":"121","severity":1,"message":"122","line":108,"column":27,"nodeType":"123","endLine":108,"endColumn":59},{"ruleId":"108","severity":1,"message":"109","line":4,"column":8,"nodeType":"110","messageId":"111","endLine":4,"endColumn":18},{"ruleId":"108","severity":1,"message":"112","line":21,"column":8,"nodeType":"110","messageId":"111","endLine":21,"endColumn":20},{"ruleId":"108","severity":1,"message":"113","line":22,"column":8,"nodeType":"110","messageId":"111","endLine":22,"endColumn":18},{"ruleId":"108","severity":1,"message":"114","line":22,"column":20,"nodeType":"110","messageId":"111","endLine":22,"endColumn":33},{"ruleId":"108","severity":1,"message":"115","line":24,"column":8,"nodeType":"110","messageId":"111","endLine":24,"endColumn":18},{"ruleId":"108","severity":1,"message":"116","line":24,"column":20,"nodeType":"110","messageId":"111","endLine":24,"endColumn":33},{"ruleId":"117","severity":1,"message":"118","line":102,"column":6,"nodeType":"119","endLine":102,"endColumn":14,"suggestions":"137"},{"ruleId":"121","severity":1,"message":"122","line":242,"column":23,"nodeType":"123","endLine":242,"endColumn":88},{"ruleId":"129","severity":1,"message":"130","line":50,"column":19,"nodeType":"131","messageId":"132","endLine":50,"endColumn":21},{"ruleId":"133","severity":1,"message":"134","line":115,"column":17,"nodeType":"123","endLine":115,"endColumn":123},{"ruleId":"133","severity":1,"message":"134","line":168,"column":17,"nodeType":"123","endLine":168,"endColumn":115},"no-unused-vars","'Restaurant' is defined but never used.","Identifier","unusedVar","'searchParams' is assigned a value but never used.","'searchList' is assigned a value but never used.","'setSearchList' is assigned a value but never used.","'totalPages' is assigned a value but never used.","'setTotalPages' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getFilterDetails'. Either include it or remove the dependency array.","ArrayExpression",["138"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'restaurant' is defined but never used.","React Hook useEffect has a missing dependency: 'getRestaurantListByLocationId'. Either include it or remove the dependency array.",["139"],"React Hook useEffect has a missing dependency: 'getRestaurantDetails'. Either include it or remove the dependency array.",["140"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",["141"],["142"],["143"],{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"146","fix":"150"},{"desc":"148","fix":"151"},{"desc":"144","fix":"152"},"Update the dependencies array to be: [filter, getFilterDetails]",{"range":"153","text":"154"},"Update the dependencies array to be: [getRestaurantListByLocationId, selectLocation]",{"range":"155","text":"156"},"Update the dependencies array to be: [getRestaurantDetails]",{"range":"157","text":"158"},{"range":"159","text":"156"},{"range":"160","text":"158"},{"range":"161","text":"154"},[2862,2870],"[filter, getFilterDetails]",[2002,2018],"[getRestaurantListByLocationId, selectLocation]",[2784,2786],"[getRestaurantDetails]",[2002,2018],[2784,2786],[2862,2870]]